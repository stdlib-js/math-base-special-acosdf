{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2024 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport rad2degf from '@stdlib/math-base-special-rad2degf';\nimport acosf from '@stdlib/math-base-special-acosf';\n\n\n// MAIN //\n\n/**\n* Computes the arccosine (in degrees) of a single-precision floating-point number.\n*\n* @param {number} x - input value\n* @returns {number} arccosine (in degrees)\n*\n* @example\n* var v = acosdf( 0.0 );\n* // returns 90.0\n*\n* @example\n* var v = acosdf( 0.5 );\n* // returns ~60.0\n*\n* @example\n* import sqrtf from '@stdlib/math-base-special-sqrtf';\n*\n* var v = acosdf( sqrtf( 2 ) / 2 );\n* // returns ~45.0\n*\n* @example\n* import sqrtf from '@stdlib/math-base-special-sqrtf';\n*\n* var v = acosdf( sqrtf( 3 ) / 2 );\n* // returns ~30.0\n*\n* @example\n* var v = acosdf( NaN );\n* // returns NaN\n*/\nfunction acosdf( x ) {\n\treturn rad2degf( acosf( x ) );\n}\n\n\n// EXPORTS //\n\nexport default acosdf;\n"],"names":["acosdf","x","rad2degf","acosf"],"mappings":";;uMA0DA,SAASA,EAAQC,GAChB,OAAOC,EAAUC,EAAOF,GACzB"}